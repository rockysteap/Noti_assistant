# Docker Compose configuration

services:
  # Django and DRF (main development container)
  web:
    build: .
    container_name: noti_web
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=noti.settings.development
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - noti_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn noti.wsgi:application --bind 0.0.0.0:8000 --workers 3 --worker-class gunicorn.workers.sync.SyncWorker"

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: noti_db
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=noti_db
      - POSTGRES_USER=noti_user
      - POSTGRES_PASSWORD=${DB_PASSWORD:-noti_password}
    networks:
      - noti_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U noti_user -d noti_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching, sessions, and task queues
  redis:
    image: redis:7-alpine
    container_name: noti_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-your_redis_password}
    networks:
      - noti_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: noti_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
    networks:
      - noti_network

  # Celery Worker for background tasks
  celery:
    build: .
    container_name: noti_celery
    restart: unless-stopped
    volumes:
      - .:/app
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=noti.settings.development
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - noti_network
    command: celery -A noti worker --loglevel=info

  # Celery Beat for scheduled tasks
  celery-beat:
    build: .
    container_name: noti_celery_beat
    restart: unless-stopped
    volumes:
      - .:/app
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=noti.settings.development
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - noti_network
    command: celery -A noti beat --loglevel=info

  # Flower for monitoring Celery tasks
  flower:
    build: .
    container_name: noti_flower
    restart: unless-stopped
    ports:
      - "5555:5555"
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=noti.settings.development
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - noti_network
    command: celery -A noti flower --port=5555

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  noti_network:
    driver: bridge
